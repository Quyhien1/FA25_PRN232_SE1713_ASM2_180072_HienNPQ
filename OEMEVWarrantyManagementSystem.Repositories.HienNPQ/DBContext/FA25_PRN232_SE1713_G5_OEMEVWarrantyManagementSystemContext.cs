// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using OEMEVWarrantyManagementSystem.Repositories.HienNPQ.Models;
using System;
using System.Collections.Generic;

namespace OEMEVWarrantyManagementSystem.Repositories.HienNPQ.DBContext;

public partial class FA25_PRN232_SE1713_G5_OEMEVWarrantyManagementSystemContext : DbContext
{
    public FA25_PRN232_SE1713_G5_OEMEVWarrantyManagementSystemContext()
    {
    }

    public FA25_PRN232_SE1713_G5_OEMEVWarrantyManagementSystemContext(DbContextOptions<FA25_PRN232_SE1713_G5_OEMEVWarrantyManagementSystemContext> options)
        : base(options)
    {
    }

    public virtual DbSet<BookingHienNpq> BookingHienNpqs { get; set; }

    public virtual DbSet<ClaimProcessLogHoangTh> ClaimProcessLogHoangThs { get; set; }

    public virtual DbSet<PartItemTinVt> PartItemTinVts { get; set; }

    public virtual DbSet<PartTypeTinVt> PartTypeTinVts { get; set; }

    public virtual DbSet<SupportInfoHienNpq> SupportInfoHienNpqs { get; set; }

    public virtual DbSet<SystemUserAccount> SystemUserAccounts { get; set; }

    public virtual DbSet<WarrantyClaimHoangTh> WarrantyClaimHoangThs { get; set; }

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);
    //    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
    //        => optionsBuilder.UseSqlServer("Data Source=localhost;Initial Catalog=FA25_PRN232_SE1713_G5_OEMEVWarrantyManagementSystem;Persist Security Info=True;User ID=sa;Password=P@ssw0rd");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<BookingHienNpq>(entity =>
        {
            entity.HasKey(e => e.BookingHienNpqid).HasName("PK__BookingH__AFB522BCA6DF1AD8");

            entity.ToTable("BookingHienNPQ");

            entity.Property(e => e.BookingHienNpqid).HasColumnName("BookingHienNPQID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.PricePerHour).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.StartTime).HasColumnType("datetime");
            entity.Property(e => e.StationName)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(20)
                .HasDefaultValue("Pending");
            entity.Property(e => e.SupportInfoHienNpqid).HasColumnName("SupportInfoHienNPQID");
            entity.Property(e => e.VehicleType)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.SupportInfoHienNpq).WithMany(p => p.BookingHienNpqs)
                .HasForeignKey(d => d.SupportInfoHienNpqid)
                .HasConstraintName("FK_BookingHienNPQ_SupportInfoHienNPQ");
        });

        modelBuilder.Entity<ClaimProcessLogHoangTh>(entity =>
        {
            entity.HasKey(e => e.ClaimProcessLogHoangThid).HasName("PK__ClaimPro__B3BE259AC0B113A9");

            entity.ToTable("ClaimProcessLogHoangTH");

            entity.Property(e => e.ClaimProcessLogHoangThid).HasColumnName("ClaimProcessLogHoangTHID");
            entity.Property(e => e.ActionDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ActionTaken).HasMaxLength(100);
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Notes).HasMaxLength(255);
            entity.Property(e => e.PerformedBy).HasMaxLength(100);
            entity.Property(e => e.WarrantyClaimHoangThid).HasColumnName("WarrantyClaimHoangTHID");

            entity.HasOne(d => d.WarrantyClaimHoangTh).WithMany(p => p.ClaimProcessLogHoangThs)
                .HasForeignKey(d => d.WarrantyClaimHoangThid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ClaimProcessLog_WarrantyClaim");
        });

        modelBuilder.Entity<PartItemTinVt>(entity =>
        {
            entity.HasKey(e => e.PartItemTinVtid).HasName("PK__PartItem__8D85A21D09ECB05F");

            entity.ToTable("PartItemTinVT");

            entity.HasIndex(e => e.PartTypeTinVtid, "IX_PartItemTinVT_Type");

            entity.HasIndex(e => e.PartCode, "UX_PartItemTinVT_PartCode").IsUnique();

            entity.Property(e => e.PartItemTinVtid).HasColumnName("PartItemTinVTID");
            entity.Property(e => e.CreatedAtUtc)
                .HasPrecision(0)
                .HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.ManufacturedAt).HasPrecision(0);
            entity.Property(e => e.Notes).HasMaxLength(400);
            entity.Property(e => e.PartCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.PartName)
                .IsRequired()
                .HasMaxLength(120);
            entity.Property(e => e.PartTypeTinVtid).HasColumnName("PartTypeTinVTID");
            entity.Property(e => e.SerialNumber).HasMaxLength(64);
            entity.Property(e => e.Supplier).HasMaxLength(100);
            entity.Property(e => e.UnitPrice).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.WarrantyMonths).HasDefaultValue(24);

            entity.HasOne(d => d.PartTypeTinVt).WithMany(p => p.PartItemTinVts)
                .HasForeignKey(d => d.PartTypeTinVtid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PartItemTinVTSE161572");
        });

        modelBuilder.Entity<PartTypeTinVt>(entity =>
        {
            entity.HasKey(e => e.PartTypeTinVtid).HasName("PK__PartType__C2FF19D3BD5962A8");

            entity.ToTable("PartTypeTinVT");

            entity.HasIndex(e => e.TypeCode, "UX_PartTypeTinVT_TypeCode").IsUnique();

            entity.Property(e => e.PartTypeTinVtid).HasColumnName("PartTypeTinVTID");
            entity.Property(e => e.Category)
                .IsRequired()
                .HasMaxLength(40);
            entity.Property(e => e.EffectiveFrom)
                .HasPrecision(0)
                .HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.TypeCode)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.TypeName)
                .IsRequired()
                .HasMaxLength(80);
        });

        modelBuilder.Entity<SupportInfoHienNpq>(entity =>
        {
            entity.HasKey(e => e.SupportInfoHienNpqid).HasName("PK__SupportI__00CF1A16541972B3");

            entity.ToTable("SupportInfoHienNPQ");

            entity.Property(e => e.SupportInfoHienNpqid).HasColumnName("SupportInfoHienNPQID");
            entity.Property(e => e.Color).HasMaxLength(30);
            entity.Property(e => e.LicensePlate).HasMaxLength(20);
            entity.Property(e => e.Notes).HasMaxLength(255);
        });

        modelBuilder.Entity<SystemUserAccount>(entity =>
        {
            entity.HasKey(e => e.UserAccountId).HasName("PK__System.U__DA6C70BA6FF18B43");

            entity.ToTable("System.UserAccount");

            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");
            entity.Property(e => e.ApplicationCode).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.EmployeeCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ModifiedBy).HasMaxLength(50);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.RequestCode).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<WarrantyClaimHoangTh>(entity =>
        {
            entity.HasKey(e => e.WarrantyClaimHoangThid).HasName("PK__Warranty__13A58403DA160656");

            entity.ToTable("WarrantyClaimHoangTH");

            entity.Property(e => e.WarrantyClaimHoangThid).HasColumnName("WarrantyClaimHoangTHID");
            entity.Property(e => e.ClaimDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ImageUrl)
                .HasMaxLength(255)
                .HasColumnName("ImageURL");
            entity.Property(e => e.PartSerialNumber).HasMaxLength(100);
            entity.Property(e => e.Status).HasMaxLength(50);
            entity.Property(e => e.Vin)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("VIN");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}